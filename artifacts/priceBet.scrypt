import "../node_modules/scrypt-ts-lib/artifacts/rabinSignature.scrypt";

struct Message {
  int marker;
  int timestamp;
  int price;
  int decimal;
  bytes tradingPair;
}

contract PriceBet {
  int targetPrice;
  int decimal;
  bytes tradingPair;
  int timestampFrom;
  int timestampTo;
  int oraclePubKey;
  PubKey alicePubKey;
  PubKey bobPubKey;
  static function parseMessage(bytes msg) : Message {
    return {Utils.fromLEUnsigned(msg[0 : 1]), Utils.fromLEUnsigned(msg[1 : 5]), Utils.fromLEUnsigned(msg[5 : 13]), Utils.fromLEUnsigned(msg[13 : 14]), msg[14 : len(msg)]};
  }
  public function unlock(bytes msg, RabinSig sig, Sig winnerSig) {
    require(RabinVerifier.verifySig(msg, sig, this.oraclePubKey));
    Message message = PriceBet.parseMessage(msg);
    require(message.marker == 2);
    require(message.decimal == this.decimal);
    require(message.timestamp >= this.timestampFrom);
    require(message.timestamp <= this.timestampTo);
    require(message.tradingPair == this.tradingPair);
    PubKey winner = message.price >= this.targetPrice ? this.alicePubKey : this.bobPubKey;
    require(checkSig(winnerSig, winner));
  }
}